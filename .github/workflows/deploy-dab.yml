name: Deploy DAB Bundle

on:
  workflow_dispatch:
    inputs:
      target:
        description: "Which environment to deploy to? (dev, qa, prod)"
        required: true
        default: "dev"

env:
  ADMIN_USERS: "CjArpit17"  # Add your admin usernames here

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install PyYAML
        run: pip install pyyaml --upgrade

      - name: Install latest Databricks CLI (standalone binary)
        shell: bash
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          databricks --version
          databricks bundle --help

      - name: Generate dynamic databricks.yml with includes
        run: |
          python .github/workflows/scripts/generate_databricks_yml.py ${{ github.event.inputs.target }}

      # --- Admin check before prod deploy ---
      - name: Check Admin Permission for Prod
        if: ${{ github.event.inputs.target == 'prod' }}
        run: |
          IFS=',' read -ra ADMINS <<< "${{ env.ADMIN_USERS }}"
          IS_ADMIN=false
          for admin in "${ADMINS[@]}"; do
            if [[ "$admin" == "${{ github.actor }}" ]]; then
              IS_ADMIN=true
              break
            fi
          done
          if [[ "$IS_ADMIN" != "true" ]]; then
            echo "ERROR: Admin level permissions required to deploy to prod. '${{ github.actor }}' is not authorized."
            exit 1
          else
            echo "User '${{ github.actor }}' is authorized for prod deployment."
          fi

      - name: Deploy to dev
        if: ${{ github.event.inputs.target == 'dev' }}
        run: databricks bundle deploy --target dev
        env:
          DATABRICKS_HOST: ${{ secrets.DBX_DEV_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DBX_DEV_TOKEN }}

      - name: Deploy to qa
        if: ${{ github.event.inputs.target == 'qa' }}
        run: databricks bundle deploy --target qa
        env:
          DATABRICKS_HOST: ${{ secrets.DBX_QA_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DBX_QA_TOKEN }}

      - name: Deploy to prod
        if: ${{ github.event.inputs.target == 'prod' }}
        run: databricks bundle deploy --target prod
        env:
          DATABRICKS_HOST: ${{ secrets.DBX_PROD_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DBX_PROD_TOKEN }}
